---
- name: Create /usr/bin/dcm directory
  file:
    path: /usr/bin/dcm
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create /var/kafka-logs directory
  file:
    path: /var/kafka-logs
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create /var/zookeeper directory
  file:
    path: /var/zookeeper
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy create_kafka_mirror.sh script
  copy:
    src: create_kafka_mirror.sh
    dest: /usr/bin/dcm/create_kafka_mirror.sh
    owner: root
    group: root
    mode: 0755
  when: site == "iwl"

- name: Copy delete_kafka_mirror.sh script
  copy:
    src: delete_kafka_mirror.sh
    dest: /usr/bin/dcm/delete_kafka_mirror.sh
    owner: root
    group: root
    mode: 0755
  when: site == "iwl"

- name: Copy Spanish consumer config
  copy:
    src: spanish_consumer.config
    dest: /usr/bin/dcm/spanish_consumer.config
    owner: root
    group: root
    mode: 0755
  when: site == "iwl"

- name: Change Spanish Kafka broker IP
  lineinfile:
    path: /usr/bin/dcm/spanish_consumer.config
    regexp: 'bootstrap.servers=BROKER_IP:9092'
    line: "bootstrap.servers={{spanish_site_ip_port}}"
  when: site == "iwl"

- name: Copy Italian consumer config
  copy:
    src: italian_consumer.config
    dest: /usr/bin/dcm/italian_consumer.config
    owner: root
    group: root
    mode: 0755
  when: site == "iwl"

- name: Change Italian Kafka broker IP
  lineinfile:
    path: /usr/bin/dcm/italian_consumer.config
    regexp: 'bootstrap.servers=BROKER_IP:9092'
    line: "bootstrap.servers={{italian_site_ip_port}}"
  when: site == "iwl"

- name: Copy French consumer config
  copy:
    src: french_consumer.config
    dest: /usr/bin/dcm/french_consumer.config
    owner: root
    group: root
    mode: 0755
  when: site == "iwl"

- name: Change French Kafka broker IP
  lineinfile:
    path: /usr/bin/dcm/french_consumer.config
    regexp: 'bootstrap.servers=BROKER_IP:9092'
    line: "bootstrap.servers={{french_site_ip_port}}"
  when: site == "iwl"

- name: Copy Greek consumer config
  copy:
    src: greek_consumer.config
    dest: /usr/bin/dcm/greek_consumer.config
    owner: root
    group: root
    mode: 0755
  when: site == "iwl"

- name: Change Greek Kafka broker IP
  lineinfile:
    path: /usr/bin/dcm/greek_consumer.config
    regexp: 'bootstrap.servers=BROKER_IP:9092'
    line: "bootstrap.servers={{greek_site_ip_port}}"
  when: site == "iwl"

- name: Copy producer config
  copy:
    src: producer.config
    dest: /usr/bin/dcm/producer.config
    owner: root
    group: root
    mode: 0755
  when: site == "iwl"

- name: Change IWL broker IP
  lineinfile:
    path: /usr/bin/dcm/producer.config
    regexp: 'bootstrap.servers=BROKER_IP:9092'
    line: "bootstrap.servers={{ansible_host}}:9092"
  when: site == "iwl"

- name: Copy Kafka Mirror services
  copy:
    src: kafka-mirror-services/
    dest: /etc/systemd/system/
    owner: root
    group: root
    mode: 0644
  when: site == "iwl"

- name: Check if dcm.service file exists
  stat:
    path: /etc/systemd/system/dcm.service 
  register: dcm_service_file
  when: site == "iwl"

- name: Stop DCM service
  shell: systemctl stop dcm.service
  when: site == "iwl" and dcm_service_file.stat.exists == true

- name: Remove dcm-python directory if exists
  file:
    path: /usr/bin/dcm/dcm-python
    state: absent 
  when: site == "iwl"

- name: Extract dcm-python module
  unarchive:
    src: dcm-python.tar.gz
    dest: /usr/bin/dcm
  when: site == "iwl"

- name: Check if dcm_site_plugin.service file exists
  stat:
    path: /etc/systemd/system/dcm_site_plugin.service 
  register: dcm_site_plugin_service_file
  when: site != "iwl"

- name: Stop DCM site plugin service
  shell: systemctl stop dcm_site_plugin.service
  when: site != "iwl" and dcm_site_plugin_service_file.stat.exists == true

- name: Remove dcm-site-plugin directory if exists
  file:
    path: /usr/bin/dcm/dcm-site-plugin
    state: absent 
  when: site != "iwl"

- name: Extract dcm-site-plugin module
  unarchive:
    src: dcm-site-plugin.tar.gz
    dest: /usr/bin/dcm
  when: site != "iwl"

- name: Installation of required packages
  apt:
    name: ['openjdk-8-jdk', 'python3', 'python3-pip', 'curl']
    update_cache: yes
  when: not update_module

- name: Select default locale
  debconf:
    name: locales
    question: locales/default_environment_locale
    value: en_US.UTF-8
    vtype: select
  notify:
    - Rebuild locales database

- name: Build /etc/locale.gen
  lineinfile:
    dest: /etc/locale.gen
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  with_items:
    - { regexp: '^#? ?de_DE ISO-8859-1', line: 'de_DE ISO-8859-1', state: present }
    - { regexp: '^#? ?de_DE.UTF-8 UTF-8', line: 'de_DE.UTF-8 UTF-8', state: present }
    - { regexp: '^#? ?de_DE@euro ISO-8859-15', line: 'de_DE@euro ISO-8859-15', state: present }
    - { regexp: '^#? ?en_GB ISO-8859-1', line: 'en_GB ISO-8859-1', state: present }
    - { regexp: '^#? ?en_GB.ISO-8859-15 ISO-8859-15', line: 'en_GB.ISO-8859-15 ISO-8859-15', state: present }
    - { regexp: '^#? ?en_GB.UTF-8 UTF-8', line: 'en_GB.UTF-8 UTF-8', state: present }
    - { regexp: '^#? ?en_US ISO-8859-1', line: 'en_US ISO-8859-1', state: present }
    - { regexp: '^#? ?en_US.ISO-8859-15 ISO-8859-15', line: 'en_US.ISO-8859-15 ISO-8859-15', state: present }
    - { regexp: '^#? ?en_US.UTF-8 UTF-8', line: 'en_US.UTF-8 UTF-8', state: present }
  notify:
    - Rebuild locales database

- name: Check if Kafka exists
  stat:
    path: /opt/kafka
  register: kafka_exists

- name: Stop Kafka service
  shell: systemctl stop kafka.service
  when: kafka_exists.stat.exists == true

- name: Stop Zookeeper service
  shell: systemctl stop zookeeper.service
  when: kafka_exists.stat.exists == true

- name: Remove Kafka repository if exists
  file:
    path: /opt/kafka
    state: absent 
  when: not update_module

- name: Download and extract Kafka
  unarchive:
    src: https://archive.apache.org/dist/kafka/{{kafka_version}}/kafka_2.12-{{kafka_version}}.tgz
    dest: /opt
    remote_src: yes
  when: not update_module

- name: Change name to Kafka 
  shell: mv /opt/kafka_2.12-{{kafka_version}} /opt/kafka
  when: not update_module

- name: Include listener for the Kafka Socket Server Settings
  lineinfile:
    path: /opt/kafka/config/server.properties
    regexp: '#listeners=PLAINTEXT://:9092'
    line: 'listeners=PLAINTEXT://0.0.0.0:9092'
  when: not update_module

- name: Include advertised listener for the Kafka Socket Server Settings (IWL)
  lineinfile:
    path: /opt/kafka/config/server.properties
    regexp: '#advertised.listeners=PLAINTEXT://your.host.name:9092'
    line: "advertised.listeners=PLAINTEXT://{{ansible_host}}:9092"
  when: not update_module and site == "iwl"

- name: Include advertised listener for the Kafka Socket Server Settings (Spain)
  lineinfile:
    path: /opt/kafka/config/server.properties
    regexp: '#advertised.listeners=PLAINTEXT://your.host.name:9092'
    line: "advertised.listeners=PLAINTEXT://kafka.spain.iwl:9092"
  when: not update_module and site == "spain"

- name: Include advertised listener for the Kafka Socket Server Settings (Italy)
  lineinfile:
    path: /opt/kafka/config/server.properties
    regexp: '#advertised.listeners=PLAINTEXT://your.host.name:9092'
    line: "advertised.listeners=PLAINTEXT://kafka-polito:9092"
  when: not update_module and site == "italy"

- name: Include advertised listener for the Kafka Socket Server Settings (France)
  lineinfile:
    path: /opt/kafka/config/server.properties
    regexp: '#advertised.listeners=PLAINTEXT://your.host.name:9092'
    line: "advertised.listeners=PLAINTEXT://kafka.france.iwl:9092"
  when: not update_module and site == "france"

- name: Include advertised listener for the Kafka Socket Server Settings (Greece)
  lineinfile:
    path: /opt/kafka/config/server.properties
    regexp: '#advertised.listeners=PLAINTEXT://your.host.name:9092'
    line: "advertised.listeners=PLAINTEXT://kafka.greece.iwl:9092"
  when: not update_module and site == "greece"

#- name: Remove Kafka logs
#  file:
#    path: /tmp/kafka-logs/
#    state: absent
#  when: not update_module

- name: Change route for Kafka logs
  lineinfile:
    path: /opt/kafka/config/server.properties
    regexp: 'log.dirs=/tmp/kafka-logs'
    line: "log.dirs=/var/kafka-logs"
  when: not update_module

- name: Change route for ZooKeeper logs
  lineinfile:
    path: /opt/kafka/config/zookeeper.properties
    regexp: 'dataDir=/tmp/zookeeper'
    line: "dataDir=/var/zookeeper"
  when: not update_module

- name: Delete topic enable
  lineinfile:
    path: /opt/kafka/config/server.properties
    line: 'delete.topic.enable=true'
    insertafter: EOF
  when: not update_module

- name: Auto create topics disable
  lineinfile:
    path: /opt/kafka/config/server.properties
    line: 'auto.create.topics.enable=false'
    insertafter: EOF
  when: not update_module

- name: Change /etc/hosts in IWL (Spain)
  lineinfile:
    path: /etc/hosts
    line: "{{spanish_vpn_ip}} kafka.spain.iwl"
    insertafter: EOF
  when: not update_module and site == "iwl"

- name: Change /etc/hosts in IWL (Italy)
  lineinfile:
    path: /etc/hosts
    line: "{{italian_vpn_ip}} kafka-polito"
    insertafter: EOF
  when: not update_module and site == "iwl"

- name: Change /etc/hosts in IWL (France)
  lineinfile:
    path: /etc/hosts
    line: "{{french_vpn_ip}} kafka.france.iwl"
    insertafter: EOF
  when: not update_module and site == "iwl"

- name: Change /etc/hosts in IWL (Greece)
  lineinfile:
    path: /etc/hosts
    line: "{{greek_vpn_ip}} kafka.greece.iwl"
    insertafter: EOF
  when: not update_module and site == "iwl"

- name: Change /etc/hosts in site broker (Spain)
  lineinfile:
    path: /etc/hosts
    line: "{{ansible_host}} kafka.spain.iwl"
    insertafter: EOF
  when: not update_module and site == "spain"

- name: Change /etc/hosts in site broker (Italy)
  lineinfile:
    path: /etc/hosts
    line: "{{ansible_host}} kafka-polito"
    insertafter: EOF
  when: not update_module and site == "italy"

- name: Change /etc/hosts in site broker (France)
  lineinfile:
    path: /etc/hosts
    line: "{{ansible_host}} kafka.france.iwl"
    insertafter: EOF
  when: not update_module and site == "france"

- name: Change /etc/hosts in site broker (Greece)
  lineinfile:
    path: /etc/hosts
    line: "{{ansible_host}} kafka.greece.iwl"
    insertafter: EOF
  when: not update_module and site == "greece"

- name: Check if /etc/sudoers file has been modified previously
  shell: cat /etc/sudoers | grep "{{ansible_user}}" | grep NOPASSWD | wc -w
  register: etc_sudoers_check

- name: Avoid asking for password with sudo commands
  shell: echo "{{ansible_user}} ALL=(ALL) NOPASSWD"{{":"}}" ALL" | sudo tee -a /etc/sudoers > /dev/null
  when: etc_sudoers_check.stdout == "0"

- name: Press enter to continue
  pause: prompt='Press enter to continue'
  when: prompt_when_finishes_tasks
